# # 8-jdk-alpine
version: "3"
services:
  #zookeeper:
    #image: confluentinc/cp-zookeeper:5.3.1
    #container_name: zookeeper
    #hostname: zookeeper
    #ports:
    #- 2181:2181
    #environment:
    #  ZOOKEEPER_CLIENT_PORT: 2181
    #  ZOOKEEPER_TICK_TIME: 2000

  #kafka:
  #  container_name: kafka
  #  image: confluentinc/cp-kafka:5.3.1
  #  hostname: kafka
  #  ports:
  #  - 29092:29092
  #  - 9092:9092
  #  environment:
  #    KAFKA_BROKER_ID: 1
  #    KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #    KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #  restart: always
  #  volumes:
  #  - /var/run/docker.sock:/var/run/docker.sock
  #  depends_on:
  #  - zookeeper

  mongodb:
    image: mongo:4.0.0
    container_name: "mongodb"
    ports:
    - 27017:27017
    command: --smallfiles
  #mongodb2:
    #image: mongo:4.0.0
    #container_name: "mongodb2"
    #ports:
    #- 27018:27017
    #command: --smallfiles
  Account:
    build : ./Account
    image: springio/account
    ports:
    - 8081:8081
    links:
    - mongodb
    environment:
      spring.data.mongodb.uri: mongodb://mongodb:27017/account
  Bank:
    build : ./Bank
    image: springio/bank
    ports:
    - 8080:8080
    links:
    - mongodb
    environment:
      spring.data.mongodb.uri: mongodb://mongodb:27017/bank
